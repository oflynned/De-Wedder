{"version":3,"sources":["components/forecast/rain.jsx","components/forecast/cloud.jsx","components/forecast/clear.jsx","components/forecast/snow.jsx","components/forecast/thunderstorm.jsx","components/forecast/drizzle.jsx","api/api.js","components/weather.jsx","App.js","index.js"],"names":["Rain","temperature","_this$props","this","props","city","react_default","a","createElement","lib_default","name","iconId","showDescription","Component","Cloud","Snow","Thunderstorm","Drizzle","fetchWeatherAPI","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","lat","lng","url","_ref2","data","wrap","_context","prev","next","concat","process","axios","get","sent","status","Error","abrupt","stop","_x","_x2","apply","arguments","Weather","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","allowedLocationPermissions","loading","conditions","description","humidity","_this2","Promise","res","navigator","geolocation","getCurrentPosition","coords","then","latitude","longitude","setState","_ref3","weather","main","temp","_weather$","id","Math","round","formatCity","catch","err","console","error","className","_this$assignWeather","assignWeather","component","gradient","drizzle","rain","thunderstorm","snow","clear","cloud","replace","App","components_weather","WebFont","load","google","families","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8f53f3e2.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport WeatherIcon from \"react-icons-weather\";\n\nclass Rain extends Component {\n    showDescription(temperature) {\n        if (temperature > 10) {\n            return \"It's lashing, bring a jacket and a bucket\"\n        } else {\n            return \"It's fucking shite outside\"\n        }\n    }\n\n    render() {\n        const {temperature, city} = this.props;\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {temperature}&deg;C in {city}</h1>\n                <h3>\"{this.showDescription(temperature)}\"</h3>\n            </div>\n        )\n    }\n}\n\nexport default Rain;\n","import React, {Component} from \"react\";\nimport WeatherIcon from 'react-icons-weather';\n\nclass Cloud extends Component {\n    showDescription(temperature) {\n        if (temperature > 10) {\n            return \"Fierce mild\"\n        } else if (temperature > 5) {\n            return \"Grand, but bring a jacket\"\n        } else {\n            return \"It's fucking shite outside\"\n        }\n    }\n\n    render() {\n        const {temperature, city} = this.props;\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {temperature}&deg;C in {city}</h1>\n                <h3>\"{this.showDescription(temperature)}\"</h3>\n            </div>\n        );\n    }\n}\n\nexport default Cloud;\n","import React, {Component} from \"react\";\nimport WeatherIcon from 'react-icons-weather';\n\nclass Cloud extends Component {\n    showDescription(temperature) {\n        if (temperature > 20) {\n            return \"Hotter than a Mexican wedding\"\n        } else if (temperature > 15) {\n            return \"Fierce mild. It's a grand day for drying the clothes\"\n        } else if (temperature > 10) {\n            return \"Grand, but you'll need a jacket\"\n        } else {\n            return \"Cold as brass monkeys - fuckin' Baltic outside\"\n        }\n    }\n\n    render() {\n        const {temperature, city} = this.props;\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {temperature}&deg;C in {city}</h1>\n                <h3>\"{this.showDescription(temperature)}\"</h3>\n            </div>\n        );\n    }\n}\n\nexport default Cloud;\n","import React, {Component} from \"react\";\nimport WeatherIcon from 'react-icons-weather';\n\nclass Snow extends Component {\n    render() {\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {this.props.temperature}&deg;C in {this.props.city}</h1>\n                <h3>\"Bitta sneachta\"</h3>\n            </div>\n        );\n    }\n}\n\nexport default Snow;\n","import React, {Component} from \"react\";\nimport WeatherIcon from 'react-icons-weather';\n\nclass Thunderstorm extends Component {\n    render() {\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {this.props.temperature}&deg;C in {this.props.city}</h1>\n                <h3>\"It's pissing buckets\"</h3>\n            </div>\n        );\n    }\n}\n\nexport default Thunderstorm;\n","import React, {Component} from \"react\";\nimport WeatherIcon from 'react-icons-weather';\n\nclass Drizzle extends Component {\n    showDescription(temperature) {\n        if (temperature > 10) {\n            return \"Ah lads, it's moukish\"\n        } else if (temperature > 5) {\n            return \"Some dirty auld mist. You'd piss harder\"\n        } else {\n            return \"It's fucking shite outside\"\n        }\n    }\n\n    render() {\n        const {temperature, city} = this.props;\n        return (\n            <div>\n                <WeatherIcon name=\"owm\" iconId={this.props.iconId}/>\n                <h1>It's {temperature}&deg;C in {city}</h1>\n                <h3>\"{this.showDescription(temperature)}\"</h3>\n            </div>\n        );\n    }\n}\n\nexport default Drizzle;\n","import axios from \"axios\";\n\nconst {REACT_APP_API_KEY} = process.env;\n\nexport const fetchWeatherAPI = async (lat, lng) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?&units=metric&lat=${lat}&lon=${lng}&units=metric&appid=${REACT_APP_API_KEY}`;\n    const {data, status} = await axios.get(url);\n    if (status !== 200) {\n        throw new Error(data)\n    }\n\n    return data;\n};\n","import React, {Component} from \"react\";\n\nimport \"./weather.css\";\n\nimport Rain from \"./forecast/rain\";\nimport Cloud from \"./forecast/cloud\";\nimport Clear from \"./forecast/clear\";\nimport Snow from \"./forecast/snow\";\nimport Thunderstorm from \"./forecast/thunderstorm\";\nimport Drizzle from \"./forecast/drizzle\";\nimport {fetchWeatherAPI} from \"../api/api\";\n\nclass Weather extends Component {\n    constructor() {\n        super();\n        this.state = {\n            allowedLocationPermissions: false,\n            loading: true,\n            conditions: null,\n            description: null,\n            temperature: null,\n            humidity: null,\n            iconId: null\n        };\n    }\n\n    componentDidMount() {\n        return new Promise(res => navigator.geolocation.getCurrentPosition(({coords}) => res(coords)))\n            .then(({latitude, longitude}) => {\n                this.setState({allowedLocationPermissions: true});\n                return fetchWeatherAPI(latitude, longitude);\n            })\n            .then(({weather, main, name}) => {\n                const {temp: temperature, humidity} = main;\n                const {main: conditions, description, id: iconId} = weather[0];\n                this.setState({\n                    conditions,\n                    description,\n                    temperature: Math.round(temperature),\n                    humidity,\n                    iconId,\n                    city: Weather.formatCity(name)\n                });\n            })\n            .catch(err => {\n                console.error(err);\n                this.setState({loading: false});\n            })\n    }\n\n    render() {\n        const {allowedLocationPermissions} = this.state;\n        if (!allowedLocationPermissions) {\n            return (\n                <div className={\"weather\"}>\n                    <div className={\"container\"}>\n                        Please allow browser location permissions!\n                    </div>\n                </div>\n            );\n        }\n\n        let {component, gradient} = this.assignWeather();\n        return (\n            <div className={\"weather\"}>\n                <div className={`container ${gradient}`}>\n                    {component}\n                </div>\n            </div>\n        );\n    }\n\n    static formatCity(city) {\n        return city.replace(\"(\", \"\").replace(\")\", \"\");\n    }\n\n    assignWeather() {\n        switch (this.state.conditions) {\n            case \"Drizzle\":\n            case \"Mist\":\n            case \"Smoke\":\n            case \"Haze\":\n            case \"Dust\":\n            case \"Fog\":\n            case \"Ash\":\n                return {\n                    component: <Drizzle temperature={this.state.temperature}\n                                        description={this.state.description}\n                                        iconId={this.state.iconId}\n                                        city={this.state.city}/>,\n                    gradient: \"gradient-rain\"\n                };\n            case \"Squall\":\n            case \"Rain\":\n                return {\n                    component: <Rain temperature={this.state.temperature}\n                                     description={this.state.description}\n                                     iconId={this.state.iconId}\n                                     city={this.state.city}/>,\n                    gradient: \"gradient-rain\"\n                };\n            case \"Tornado\":\n            case \"Thunder\":\n            case \"Thunderstorm\":\n                return {\n                    component: <Thunderstorm temperature={this.state.temperature}\n                                             description={this.state.description}\n                                             iconId={this.state.iconId}\n                                             city={this.state.city}/>,\n                    gradient: \"gradient-thunderstorm\"\n                };\n            case \"Snow\":\n                return {\n                    component: <Snow temperature={this.state.temperature}\n                                     description={this.state.description}\n                                     iconId={this.state.iconId}\n                                     city={this.state.city}/>,\n                    gradient: \"gradient-snow\"\n                };\n            case \"Clear\":\n                return {\n                    component: <Clear temperature={this.state.temperature}\n                                      description={this.state.description}\n                                      iconId={this.state.iconId}\n                                      city={this.state.city}/>,\n                    gradient: \"gradient-clear\"\n                };\n            case \"Clouds\":\n                return {\n                    component: <Cloud temperature={this.state.temperature}\n                                      description={this.state.description}\n                                      iconId={this.state.iconId}\n                                      city={this.state.city}/>,\n                    gradient: \"gradient-cloudy\"\n                };\n            default:\n                return this.state.loading ? <div>Loading...</div> : <div>Unknown weather type!</div>;\n        }\n    }\n}\n\nexport default Weather;\n","import React from 'react';\nimport './App.css';\n\nimport Weather from \"./components/weather\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Weather/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n    google: {\n        families: [\"Dosis\", \"sans-serif\"]\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}